image:
  repository: ipfs/kubo
  tag: v0.21.0
  pullPolicy: IfNotPresent

##
## Application
##

resources:
  limits:
    cpu: "0.35"
    memory: 2500Mi
  requests:
    cpu: "0.3"
    memory: 2000Mi

initContainers:
  add-key:
    name: add-key
    image: >-
      {{ printf "%s:%s" .Values.image.repository .Values.image.tag }}
    command:
      - sh
      - -acxe
      - >-
        if ipfs --api "$IPFS_API" key list | grep main; then
          echo "key already exists. skipping import...";
        else
          ipfs --api "$IPFS_API" key import main /keys/ipns.key;
        fi
    env:
      IPFS_API: "{{ .Values.env.IPFS_API }}"
    volumeMounts:
      - name: ipns-secret
        mountPath: /keys/ipns.key
        subPath: ipns.key

command:
  - sh
  - -acxe
  - >-
    echo "Start: $(date)";
    manifestHash=$(ipfs --api "$IPFS_API" add -Q -r /data/manifest.json);
    hash=$(ipfs --api "$IPFS_API" add -Q -r /data/contracts);
    echo "End: $(date) - $hash";
    echo "Start: $(date)";
    ipfs --api "$IPFS_API" files rm -r /contracts || true;
    ipfs --api "$IPFS_API" files rm -r /manifest.json || true;
    echo "End: $(date) - $hash";
    echo "Start: $(date)";
    ipfs --api "$IPFS_API" files cp -p /ipfs/$hash /contracts;
    ipfs --api "$IPFS_API" files cp -p /ipfs/$manifestHash /manifest.json;
    echo "End: $(date) - $hash";
    rootHash=$(ipfs --api "$IPFS_API" files stat / | head -n 1);
    echo "Publishing rootHash $rootHash under ipns key";
    ipfs --api "$IPFS_API" -D name publish --key=main $rootHash;
    echo "Published rootHash $rootHash under ipns key";

controller:
  type: cronjob
  restartPolicy: Never
  cronjob:
    concurrencyPolicy: Forbid
    schedule: "* * * * *"
    startingDeadlineSeconds: 30
    successfulJobsHistory: 1
    failedJobsHistory: 1
    backoffLimit: 3

##
## Run pod on a specific node
##
nodeSelector:
  dedicated: sourcify-static
tolerations:
  - key: "dedicated"
    operator: "Equal"
    value: "sourcify-static"
    effect: "NoSchedule"
affinity:
  nodeAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      nodeSelectorTerms:
      - matchExpressions:
        - key: dedicated
          operator: In
          values:
          - sourcify-static

##
## Data source
##

persistence:
  data:
    enabled: true
    type: pvc
    existingClaim: sourcify-repository-v1-xfs
    mountPath: /data

##
## Environment configuration
##

env:
  IPFS_API: /dns4/ipfs-ipfs-main-0.ipfs-ipfs-main.sourcify.svc.cluster.local/tcp/5001

##
## Secrets
##

secrets:
  secretenv:
    enabled: false
    stringData: {}
