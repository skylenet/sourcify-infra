image:
  repository: ghcr.io/ethereum/sourcify/server
  tag: staging@sha256:f2d31e6ebf8f32a8bb0f72572a1235566a127c0e8fcc06bffda282c998d46319
  pullPolicy: IfNotPresent
imagePullSecrets:
  - name: image-pull-secret
##
## Application
##

controller:
  type: statefulset
  replicas: 1
  strategy: RollingUpdate
service:
  main:
    enabled: true
    primary: true
    type: ClusterIP
    ports:
      http:
        port: 80
##
## Environment configuration
##
env:
  TAG: latest
  REPOSITORY_PATH: /home/app/repository
  REPOSITORY_SERVER_URL: https://repo.staging.sourcify.dev
  #REPOSITORY_SERVER_URL: https://repo.sourcify-staging.ethpandaops.io
  SOLC_REPO: /home/app/compilers/solc
  SOLJSON_REPO: /home/app/compilers/soljson
  SERVER_PORT: "80"
  IPFS_GATEWAY: http://ipfs-ipfs-gateway:8080/ipfs/
  IPFS_API: http://ipfs-ipfs-main:5001
  AUTH0_AUDIENCE: https://sourcify.dev
  AUTH0_ISSUERBASEURL: https://dev-htkreq1l71u1hn5l.us.auth0.com
  AUTH0_TOKENSIGNINGALG: RS256
  AUTH0_CLIENTID: epipuQWJL67dVggPvxNmAy40ggzNum9F
  NODE_URL_MAINNET: https://rpc.mainnet.ethpandaops.io
  NODE_URL_GOERLI: https://rpc.goerli.ethpandaops.io
  NODE_URL_SEPOLIA: https://rpc.sepolia.ethpandaops.io
  AWS_LAMBDA_FUNCTION: compile
##
## Secrets
##
secrets:
  secretenv:
    enabled: true
    stringData:
      SESSION_SECRET: "<path:/secrets/clusters/sourcify/shared/shared.enc.yaml#SOURCIFY_SERVER_SESSION_SECRET>"
      INFURA_API_KEY: "<path:/secrets/clusters/sourcify/shared/shared.enc.yaml#INFURA_API_KEY>"
      ALCHEMY_API_KEY: "<path:/secrets/clusters/sourcify/shared/shared.enc.yaml#ALCHEMY_API_KEY>"
      ALCHEMY_API_KEY_OPTIMISM: "<path:/secrets/clusters/sourcify/shared/shared.enc.yaml#ALCHEMY_API_KEY_OPTIMISM>"
      ALCHEMY_API_KEY_ARBITRUM: "<path:/secrets/clusters/sourcify/shared/shared.enc.yaml#ALCHEMY_API_KEY_ARBITRUM>"
      ETHERSCAN_API_KEY: "<path:/secrets/clusters/sourcify/shared/shared.enc.yaml#ETHERSCAN_API_KEY>"
      ARBISCAN_API_KEY: "<path:/secrets/clusters/sourcify/shared/shared.enc.yaml#ARBISCAN_API_KEY>"
      POLYGONSCAN_API_KEY: "<path:/secrets/clusters/sourcify/shared/shared.enc.yaml#POLYGONSCAN_API_KEY>"
      BSCSCAN_API_KEY: "<path:/secrets/clusters/sourcify/shared/shared.enc.yaml#BSCSCAN_API_KEY>"
      SNOWTRACE_API_KEY: "<path:/secrets/clusters/sourcify/shared/shared.enc.yaml#SNOWTRACE_API_KEY>"
      CELOSCAN_API_KEY: "<path:/secrets/clusters/sourcify/shared/shared.enc.yaml#CELOSCAN_API_KEY>"
      MOONSCAN_MOONBEAM_API_KEY: "<path:/secrets/clusters/sourcify/shared/shared.enc.yaml#MOONSCAN_MOONBEAM_API_KEY>"
      MOONSCAN_MOONRIVER_API_KEY: "<path:/secrets/clusters/sourcify/shared/shared.enc.yaml#MOONSCAN_MOONRIVER_API_KEY>"
      GNOSISSCAN_API_KEY: "<path:/secrets/clusters/sourcify/shared/shared.enc.yaml#GNOSISSCAN_API_KEY>"
      OPTIMISMSCAN_API_KEY: "<path:/secrets/clusters/sourcify/shared/shared.enc.yaml#OPTIMISMSCAN_API_KEY>"
      CRONOSCAN_API_KEY: "<path:/secrets/clusters/sourcify/shared/shared.enc.yaml#CRONOSCAN_API_KEY>"
      BASESCAN_API_KEY: "<path:/secrets/clusters/sourcify/shared/shared.enc.yaml#BASESCAN_API_KEY>"
      COREDAO_API_KEY: "<path:/secrets/clusters/sourcify/shared/shared.enc.yaml#COREDAO_API_KEY>"
      CF_ACCESS_CLIENT_ID: "<path:/secrets/clusters/sourcify/shared/shared.enc.yaml#CF_ACCESS_CLIENT_ID>"
      CF_ACCESS_CLIENT_SECRET: "<path:/secrets/clusters/sourcify/shared/shared.enc.yaml#CF_ACCESS_CLIENT_SECRET>"
      AWS_REGION: "<path:/secrets/clusters/sourcify/shared/shared.enc.yaml#AWS_REGION>"
      AWS_ACCESS_KEY_ID: "<path:/secrets/clusters/sourcify/shared/shared.enc.yaml#AWS_ACCESS_KEY_ID>"
      AWS_SECRET_ACCESS_KEY: "<path:/secrets/clusters/sourcify/shared/shared.enc.yaml#AWS_SECRET_ACCESS_KEY>"
##
## Data persistence
##
persistence:
  data:
    enabled: true
    type: pvc
    existingClaim: sourcify-repository-xfs
    mountPath: /home/app/repository
  compilers:
    enabled: true
    type: pvc
    existingClaim: sourcify-compilers
    mountPath: /home/app/compilers
##
## Health probes
##
probes:
  liveness:
    enabled: true
    custom: true
    spec:
      exec:
        command:
          - /bin/sh
          - -c
          - >-
            timeout 1 bash -c 'cat < /dev/null > /dev/tcp/127.0.0.1/80' && ls /home/app/repository/ && ls /home/app/compilers/
      initialDelaySeconds: 0
      periodSeconds: 10
      timeoutSeconds: 2
      failureThreshold: 3
  readiness:
    enabled: true
    spec:
      initialDelaySeconds: 0
      periodSeconds: 10
      timeoutSeconds: 1
      failureThreshold: 3
  startup:
    enabled: true
    spec:
      initialDelaySeconds: 0
      timeoutSeconds: 1
      periodSeconds: 5
      failureThreshold: 30
##
## Ingress
##
ingress:
  main:
    enabled: false
